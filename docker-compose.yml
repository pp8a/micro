version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.7 #latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
      
  kafka:
    image: confluentinc/cp-kafka:7.3.7 #latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.7 #latest
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      
  order-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: orders-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tgb098P7
    ports:
      - "5433:5432"

  payment-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: payments-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tgb098P7
    ports:
      - "5434:5432"

  restaurant-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: restaurants-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tgb098P7
    ports:
      - "5435:5432"
          
  discovery-server:
    build: ./discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  api-gateway:
    build: ./api-gateway
    ports:
      - "8765:8765"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka/

  order-service:
    build: ./order-service
    ports:
      - "8084:8084"
    depends_on:
    - order-db
    - kafka
    - schema-registry
    environment:
      - SPRING_PROFILES_ACTIVE=docker      
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-db:5432/orders-service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=tgb098P7
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka/
   

  payment-service:
    build: ./payment-service
    ports:
      - "8082:8082"
    depends_on:
    - payment-db
    - kafka
    - schema-registry
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://payment-db:5432/payments-service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=tgb098P7
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka/   
  
  restaurant-service:
    build: ./restaurant-service
    ports:
      - "8083:8083"
    depends_on:
    - restaurant-db
    - kafka
    - schema-registry
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://restaurant-db:5432/restaurants-service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=tgb098P7
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka/
volumes:
  postgres-data: