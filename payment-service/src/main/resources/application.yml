server:
  port: 8082 # 0 auto registration port

spring:
  application:
    name: payment-service # The name of the application, used for service identification
  datasource:
    url: jdbc:postgresql://payment-db:5432/payments-service #payment-db:5433
    username: postgres
    password: tgb098P7
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: kafka:9092
    properties:
      "[schema.registry.url]": http://schema-registry:8081
    consumer:
      group-id: payment-service-group
      auto-offset-reset: earliest
      key-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        "[schema.registry.url]": http://schema-registry:8081
        "[specific.avro.reader]": true
    producer:
      key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      acks: all
      retries: 10
      properties:
        "[schema.registry.url]": http://schema-registry:8081
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.uuid} # Unique ID for each instance
  client:    
    service-url:
      defaultZone: http://discovery-server:8761/eureka/ #http://localhost:8761/eureka/ # URL to access the Eureka Server. 

logging:  
  pattern:
    console: "%C{1.} [%-5level] %d{yyyy-MM-dd HH:mm:ss} - %msg%n" # Format for log output in the console. 
                                                                  #%C{1.} - class name, %-5level - log level, 
                                                                  #%d - date and time, %msg - log message, 
                                                                  #%n - new line